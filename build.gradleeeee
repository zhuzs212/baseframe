// 定义脚本使用资源
buildscript {
    // 引入所需要的依赖库文件
    apply from: 'config.gradle'
    // 脚本资源仓库
    repositories {
        maven { url 'https://maven.aliyun.com/repository/public/' }
    }
    // 依赖库
    dependencies {
        /* 添加插件依赖路径（通过jar方式） */
        classpath rootProject.ext.dependencies.'spring-boot-gradle-plugin'
    }
}

// 引用依赖配置文件，应用全局配置
apply from: "config.gradle"
// 所有项目的通用配置
allprojects {
    // 项目的默认名称和版本
    group 'com.baseframe'
    version '1.0-SNAPSHOT'
    // 使用插件
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'maven-publish'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    // 指定编译.java文件的jdk版本
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
    // java编译的时候缺省状态下会因为中文字符而失败
    [compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'
    // 指定仓库地址
    repositories {
        mavenLocal()
        maven {
            // 允许不安全协议
            allowInsecureProtocol = true
            url 'https://maven.aliyun.com/repository/public/'
        }
        mavenCentral()
    }

}

// 所有子项目的通用配置
subprojects {

    dependencies {
        //implementation fileTree(dir: '../libs', include: ['*.jar'])
        // 基础
        implementation 'org.springframework.boot:spring-boot-starter-web'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        implementation rootProject.ext.dependencies['mysql']
        implementation rootProject.ext.dependencies['mongodb']
        implementation rootProject.ext.dependencies['druid-spring-boot-starter']
        implementation rootProject.ext.dependencies['mybatis-spring-boot-starter']
//            implementation group: 'com.baomidou', name: 'mybatis-plus', version: '3.4.3.1'
        implementation rootProject.ext.dependencies['spring-boot-starter-data-redis']
        // springboot提供的数据缓存功能，减少数据库的访问。
        implementation rootProject.ext.dependencies['spring-boot-starter-cache']

        // 常用
        implementation rootProject.ext.dependencies['springfox-boot-starter']
//        implementation rootProject.ext.dependencies['spring-boot-starter-validation']
        implementation rootProject.ext.dependencies['validation-api']
        implementation rootProject.ext.dependencies['hibernate-validator']
        implementation rootProject.ext.dependencies['lombok']
        annotationProcessor rootProject.ext.dependencies['lombok']
        implementation rootProject.ext.dependencies['slf4j']
        implementation rootProject.ext.dependencies['hutool']

        implementation rootProject.ext.dependencies['orika-starter']
        implementation rootProject.ext.dependencies['okhttp']
        implementation rootProject.ext.dependencies['fastjson2']

        implementation rootProject.ext.dependencies['easyexcel']


    }

    // 版本统一管理
    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${rootProject.ext.version.springCloud}"
            mavenBom "com.alibaba.cloud:spring-cloud-alibaba-dependencies:${rootProject.ext.version.springCloudAlibaba}"
        }
    }

    test {
        useJUnitPlatform()
    }

    // 打包源码
    task sourceJar(type: Jar) {
        from sourceSets.main.allJava
    }
}
