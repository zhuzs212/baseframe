// 定义脚本使用资源
buildscript {
    // 引入所需要的依赖库文件
    apply from: 'config.gradle'
    // 脚本资源仓库
    repositories {
        maven { url 'https://maven.aliyun.com/repository/public' }
    }
    // 依赖库
    dependencies {
        /* 添加插件依赖路径（通过jar方式） */
        classpath rootProject.ext.dependencies.'spring-boot-gradle-plugin'
    }
}

// 引用依赖配置文件，应用全局配置
apply from: "config.gradle"
// 所有项目的通用配置
allprojects {
    // 项目的默认名称和版本
    group 'com.baseframe'
    version '1.0-SNAPSHOT'
    // 使用插件
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'maven-publish'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    // 指定编译.java文件的jdk版本
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
    // java编译的时候缺省状态下会因为中文字符而失败
    [compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'
    // 指定仓库地址
    repositories {
        mavenLocal()
        maven {
            // 允许不安全协议
            allowInsecureProtocol = true
            url 'https://maven.aliyun.com/repository/public'
        }
        mavenCentral()
//        maven {
//            allowInsecureProtocol = true
//            url = 'https://nexus.ulitom.com/repository/maven-public/'
//        }
    }
}

// 所有子项目的通用配置
allprojects {

    // 版本统一管理
    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${rootProject.ext.version.springCloud}"
            mavenBom "com.alibaba.cloud:spring-cloud-alibaba-dependencies:${rootProject.ext.version.springCloudAlibaba}"
        }
    }
//    if (name.endsWith("comm")) {
//        // comm 模块 打包成普通jar
//        apply plugin: 'java-library'
//        bootJar.setEnabled(false)
//        jar.setEnabled(true)
//    } else {
    dependencies {
        //implementation fileTree(dir: '../libs', include: ['*.jar'])
        // 基础
        implementation 'org.springframework.boot:spring-boot-starter-web'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        implementation rootProject.ext.dependencies['mysql']
        implementation rootProject.ext.dependencies['druid-spring-boot-starter']
        implementation rootProject.ext.dependencies['mybatis-spring-boot-starter']
//            implementation group: 'com.baomidou', name: 'mybatis-plus', version: '3.4.3.1'
        implementation rootProject.ext.dependencies['spring-boot-starter-data-redis']
        // springboot提供的数据缓存功能，减少数据库的访问。
        implementation rootProject.ext.dependencies['spring-boot-starter-cache']

        // 常用
        implementation rootProject.ext.dependencies['springfox-boot-starter']
//        implementation rootProject.ext.dependencies['spring-boot-starter-validation']
        implementation rootProject.ext.dependencies['validation-api']
        implementation rootProject.ext.dependencies['hibernate-validator']
        implementation rootProject.ext.dependencies['lombok']
        implementation rootProject.ext.dependencies['slf4j']
        implementation rootProject.ext.dependencies['hutool']

        implementation rootProject.ext.dependencies['orika-starter']
        implementation rootProject.ext.dependencies['okhttp']
        implementation rootProject.ext.dependencies['fastjson2']


//            implementation group: 'com.github.pagehelper', name: 'pagehelper', version: '5.1.10'
//            implementation group: 'com.github.pagehelper', name: 'pagehelper-spring-boot-starter', version: '1.3.0'
//            implementation group: 'org.apache.shiro', name: 'shiro-spring', version: '1.6.0'
//            implementation group: 'org.aspectj', name: 'aspectjrt', version: '1.9.6'
//            implementation group: 'org.aspectj', name: 'aspectjweaver', version: '1.9.6'
//
//            // Excel读写
//            implementation group: 'com.alibaba', name: 'easyexcel', version: '2.2.6'
//            // jjwt
//            implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
//
//            implementation group: 'org.apache.rocketmq', name: 'rocketmq-client', version: '4.8.0'
//            implementation group: 'org.apache.rocketmq', name: 'rocketmq-remoting', version: '4.8.0'
//            implementation group: 'org.apache.rocketmq', name: 'rocketmq-common', version: '4.8.0'
//
//            // 配置 FeignClient
//            implementation group: 'org.springframework.cloud', name: 'spring-cloud-openfeign-core', version: '2.2.5.RELEASE'
//            // 配置 Feign 日志级别
//            implementation group: 'io.github.openfeign', name: 'feign-core', version: '11.0'
//            // Feign 熔断
//            implementation group: 'io.github.openfeign', name: 'feign-hystrix', version: '11.0'
//            // TODO feign-form 表单提交
//
//            // Nacos配置中心的依赖
////        implementation group: 'com.alibaba.boot', name: 'nacos-config-spring-boot-starter', version: '0.2.7'
//            // Nacos的服务发现的依赖 nacos-discovery-spring-boot-starter
//            implementation 'com.alibaba.boot:spring-cloud-starter-alibaba-nacos-discovery:2021.0.1.0'
//            implementation group: 'cn.hutool', name: 'hutool-all', version: '5.6.6'
//            implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.13'
//            implementation group: 'org.apache.httpcomponents', name: 'httpcore', version: '4.4.14'
//            implementation group: 'org.apache.httpcomponents', name: 'httpmime', version: '4.5.13'


    }

    test {
        useJUnitPlatform()
    }

    // 打包源码
    task sourceJar(type: Jar) {
        from sourceSets.main.allJava
    }

    // 版本发布
//        publishing {
//            publications {
//                maven(MavenPublication) {
//                    from components.java
//                    artifact sourceJar {
//                        classifier "sources"
//                    }
//                }
//            }
//            repositories {
//                maven {
//                    allowInsecureProtocol = true
////                    def releases = "http://nexus.ulitom.com/repository/maven-releases/"
////                    def snapshots = "http://nexus.ulitom.com/repository/maven-snapshots/"
//                    url = version.endsWith('SNAPSHOT') ? snapshots : releases
//                    credentials {
//                        username = 'zhuzs'
//                        password = 'zhuzs'
//                    }
//                }
//            }
//        }
}
//}
